name: Build docker images
description: Build Docker Images
# NOTE: In composite actions, all parameters are strings,
# thus flags are simply checked by being non empty strings,
# where there the default is an empty string
inputs:
  dockerfile:
    description: Dockerfile to build
    required: true
  tags:
    description: Docker tags to publish
    required: true
  platforms:
    description: Platforms to build (csv)
    required: false
    default: 'linux/arm64,linux/amd64'
  test:
    description: Test command to run on the created image (Optional)
    required: false
    default: ''
  build-args:
    description: Explicit docker build-args
    required: false
    default: ''
  skip-init:
    description: Skip docker init (if ran after another invocation of this action)
    required: false
    default: ''
  docker-user:
    required: false
    description: Docker Hub User
  docker-password:
    required: false
    description: Docker Hub User
  skip-push:
    required: false
    description: Optionally skip push
    default: ''
  load-created-image:
    required: false
    description: Optionally load created docker image
    default: ''
  skip-login:
    required: false
    description: Optionally skip docker login
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      if: ${{ inputs.skip-init == '' }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      if: ${{ inputs.skip-init == '' }}

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      if: ${{ inputs.skip-init == '' && inputs.skip-login == '' }}
      with:
        registry: ghcr.io
        username: ${{ inputs.docker-user }}
        password: ${{ inputs.docker-password }}

    - name: Build Runner Image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ${{ inputs.dockerfile }}
        platforms: ${{ inputs.platforms }}
        push: ${{ inputs.skip-push == '' }}
        load: ${{ inputs.test != '' || inputs.load-created-image != '' }}
        tags: ${{ inputs.tags }}
        build-args: |
          ${{ inputs.build-args }}

    - name: Verify Built Image
      shell: bash
      if: ${{ inputs.test != '' }}
      run: |
        SINGLE_TAG=$(echo "${{ inputs.tags }}" | awk -F ',' '{print $1};' )
        SINGLE_PLATFORM=$(echo "${{ inputs.platforms }}" | awk -F ',' '{print $1};' )
        docker run --platform "${SINGLE_PLATFORM}" --rm --entrypoint bash "${SINGLE_TAG}" -c '${{ inputs.test }}'
