name: Build infra images
on:
  pull_request:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  detect-changes:
    uses: ./.github/workflows/detect-changes-matrix.yml
  build-infra:
    runs-on: 'ubuntu-latest'
    needs: detect-changes
    if: ${{ github.event_name == 'workflow_dispatch' || needs.detect-changes.outputs.infra == 'true' }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials ðŸ”’
        id: aws-credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: "eu-west-1"
          role-to-assume: ${{ secrets.AWS_ECR_ROLE_ARN }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Build Docker Image
        uses: ./.github/workflows/actions/build-docker-image
        with:
          dockerfile: ./integrations/_infra/Dockerfile.base.builder
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/port-labs/port-ocean-base-builder:latest
          docker-user: ${{ secrets.DOCKER_MACHINE_USER }}
          docker-password: ${{ secrets.DOCKER_MACHINE_TOKEN }}
          build-args: |
            ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}
          skip-push: ${{ github.event_name == 'pull_request' }}

      - name: Build Docker Image
        uses: ./.github/workflows/actions/build-docker-image
        with:
          dockerfile: ./integrations/_infra/Dockerfile.base.runner
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/port-labs/port-ocean-base-runner:latest
          docker-user: ${{ secrets.DOCKER_MACHINE_USER }}
          docker-password: ${{ secrets.DOCKER_MACHINE_TOKEN }}
          skip-init: 'true'
          build-args: |
            ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}
          skip-push: ${{ github.event_name == 'pull_request' }}
