createMissingRelatedEntities: true
deleteDependentEntities: true
resources:
  - kind: user
    selector:
      query: 'true'
    port:
      entity:
        mappings:
          identifier: .id
          title: .fullName
          blueprint: '"opsGenieUser"'
          properties:
            email: .username
            role: .role.name
            timeZone: .timeZone
            isVerified: .verified
            isBlocked: .blocked
            address: .userAddress
            createdAt: .createdAt
  - kind: team
    selector:
      query: 'true'
      includeMembers: true
    port:
      entity:
        mappings:
          identifier: .id
          title: .name
          blueprint: '"opsGenieTeam"'
          properties:
            description: .description
            url: .links.web
          relations:
            members: if .__members != null then .__members | map(.user.id) else [] end
  - kind: schedule
    selector:
      query: 'true'
      apiQueryParams:
        expand: rotation
    port:
      itemsToParse: .rotations
      entity:
        mappings:
          identifier: .id + "_" + .item.id
          title: .name + "_" + .item.name
          blueprint: '"opsGenieSchedule"'
          properties:
            timezone: .timezone
            description: .description
            startDate: .item.startDate
            endDate: .item.endDate
            rotationType: .item.type
            users: '[.item.participants[] | select(has("username")) | .username]'
          relations:
            ownerTeam: .ownerTeam.id
  - kind: service
    selector:
      query: 'true'
    port:
      entity:
        mappings:
          identifier: .id
          title: .name
          blueprint: '"opsGenieService"'
          properties:
            description: .description
            url: .links.web
            tags: .tags
          relations:
            ownerTeam: .teamId
  - kind: alert
    selector:
      query: 'true'
      apiQueryParams:
        status: open
    port:
      entity:
        mappings:
          identifier: .id
          title: .message
          blueprint: '"opsGenieAlert"'
          properties:
            status: .status
            acknowledged: .acknowledged
            priority: .priority
            sourceName: .source
            tags: .tags
            count: .count
            createdBy: .owner
            createdAt: .createdAt
            updatedAt: .updatedAt
            description: .description
            integration: .integration.name
          relations:
            relatedIncident: 'if (.alias | contains("_")) then (.alias | split("_")[0]) else null end'
            respondingTeam: .responders | [.[] | select(.type == "team") | .id]
  - kind: incident
    selector:
      query: 'true'
      apiQueryParams:
        status: open
    port:
      entity:
        mappings:
          identifier: .id
          title: .message
          blueprint: '"opsGenieIncident"'
          properties:
            status: .status
            priority: .priority
            tags: .tags
            url: .links.web
            createdAt: .createdAt
            updatedAt: .updatedAt
            description: .description
          relations:
            services: .impactedServices
            respondingTeam: .responders | [.[] | select(.type == "team") | .id]
  - kind: schedule-oncall
    selector:
      query: 'true'
    port:
      entity:
        mappings:
          identifier: .ownerTeam.id
          title: .ownerTeam.name
          blueprint: '"opsGenieTeam"'
          properties:
            oncallUsers: .__currentOncalls.onCallRecipients
  - kind: comment
    selector:
      query: 'true'
      apiQueryParams:
        status: open
    port:
      entity:
        mappings:
          identifier: .id
          title: .message
          blueprint: '"opsGenieComment"'
          properties:
            source: .source
            message: .message
            createdAt: .createdAt
          relations:
            alert: .__alert
