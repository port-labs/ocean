resources:
  - kind: AWS::Organizations::Account
    selector:
      query: 'true'
    port:
      entity:
        mappings:
          identifier: .Properties.Id
          title: .Properties.Id
          blueprint: '"awsAccount"'
          properties:
            accountArn: .Properties.Arn
            accountName: .Properties.Name
            email: .Properties.Email
            joinedMethod: .Properties.JoinedMethod
            joinedTimestamp: .Properties.JoinedTimestamp
            status: .Properties.Status

  - kind: AWS::S3::Bucket
    selector:
      query: 'true'
      includeActions:
        - GetBucketEncryptionAction
        - GetBucketPublicAccessBlockAction
        - GetBucketTaggingAction
    port:
      entity:
        mappings:
          identifier: .Properties.Name
          title: .Properties.Name
          blueprint: '"s3Bucket"'
          properties:
            arn: .Properties.BucketArn
            region: .Properties.BucketRegion
            creationDate: .Properties.CreationDate
            encryption: .Properties.BucketEncryption
            publicAccessBlockConfiguration: .Properties.PublicAccessBlockConfiguration
            tags: .Properties.Tags
          relations:
            account: .__AccountId

  - kind: AWS::ECS::Cluster
    selector:
      query: 'true'
      includeActions:
        - GetClusterPendingTasksAction
    port:
      entity:
        mappings:
          identifier: .Properties.clusterArn
          title: .Properties.clusterName
          blueprint: '"ecsCluster"'
          properties:
            status: .Properties.status
            activeServicesCount: .Properties.activeServicesCount
            pendingTasksCount: .Properties.pendingTasksCount
            runningTasksCount: .Properties.runningTasksCount
            tags: .Properties.tags
            pendingTaskArns: .Properties.pendingTaskArns
          relations:
            account: .__AccountId

  - kind: AWS::EC2::Instance
    selector:
      query: 'true'
    port:
      entity:
        mappings:
          identifier: .Properties.InstanceId
          title: .Properties.InstanceId
          blueprint: '"ec2Instance"'
          properties:
            instanceType: .Properties.InstanceType
            state: .Properties.State.Name
            publicIp: .Properties.PublicIpAddress
            privateIp: .Properties.PrivateIpAddress
            tags: .Properties.Tags
            arn: '"arn:aws:ec2:" + .__Region + ":" + .__AccountId + ":instance/" + .Properties.InstanceId'
          relations:
            account: .__AccountId

