resources:
  - kind: project
    selector:
      query: "true"
    port:
      entity:
        mappings:
          identifier: .key
          title: .name
          blueprint: '"bitbucketProject"'
          properties:
            public: .public
            type: .type
            description: .description
            link: .links.self[0].href

  - kind: repository
    selector:
      query: "true"
    port:
      entity:
        mappings:
          identifier: .slug
          title: .name
          blueprint: '"bitbucketRepository"'
          properties:
            description: .description
            state: .state
            forkable: .forkable
            public: .public
            link: .links.self[0].href
            documentation: .__readme
          relations:
            project: .project.key
            latestCommitAuthor: .__latestCommit.author.emailAddress

  - kind: pull-request
    selector:
      query: "true"
    port:
      entity:
        mappings:
          identifier: (.toRef.repository.slug // .toRef.repository.project.key) + "-" + (.id|tostring)
          title: .title
          blueprint: '"bitbucketPullRequest"'
          properties:
            created_on: .createdDate | (tonumber / 1000 | strftime("%Y-%m-%dT%H:%M:%SZ"))
            updated_on: .updatedDate | (tonumber / 1000 | strftime("%Y-%m-%dT%H:%M:%SZ"))
            merge_commit: .fromRef.latestCommit
            state: .state
            owner: .author.user.emailAddress
            link: .links.self[0].href
            destination: .toRef.displayId
            source: .fromRef.displayId
            mergedAt: .closedDate as $d | if $d == null then null else ($d / 1000 | strftime("%Y-%m-%dT%H:%M:%SZ")) end
            reviewers: "[.reviewers[].user.emailAddress]"
          relations:
            repository: .toRef.repository.slug
            participants: "[.participants[].user.emailAddress]"

  - kind: user
    selector:
      query: "true"
    port:
      entity:
        mappings:
          identifier: .emailAddress
          title: .displayName
          blueprint: '"bitbucketUser"'
          properties:
            username: .name
            url: .links.self[0].href
            portUser: .emailAddress

  - kind: folder
    selector:
      query: .project.key == "TP"
      folders:
        - path: '*'
          repos:
            - '*'
          project_key: '*'
    port:
      entity:
        mappings:
          identifier: .folder.path + "_" + .repo.slug + "_" + .repo.project.key
          title: .folder.path
          blueprint: '"bitbucketFolder"'
          properties:
            projectKey: .repo.project.key
            repositorySlug: .repo.slug
            path: .folder.path
            type: .folder.type
          relations:
            repository: .repo.slug
            project: .repo.project.key
  
  - kind: file
    selector:
      query: .project.key == "TP"
      files:
        path: '*'
        repos:
          - designer
        project_key: '*'
        filenames:
          - '*.md'
          - '*.py'
          - '*.yml'
          - '*.toml'
          - Dockerfile
          - '*.txt'
          - '*.env.sample'
    port:
      entity:
        mappings:
          identifier: .file.path + "_" + .repo.slug + "_" + .repo.project.key
          title: .file.path
          blueprint: '"bitbucketFile"'
          properties:
            projectKey: .repo.project.key
            repositorySlug: .repo.slug
            path: .file.path
            size: .file.size
            extension: .file.path | split(".") | last
            content_type: .file.contentType
            last_modified: .file.lastModified
          relations:
            repository: .repo.slug
            project: .repo.project.key