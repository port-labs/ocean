deleteDependentEntities: true
createMissingRelatedEntities: true
resources:
  - kind: board
    selector:
      query: 'true'
    port:
      entity:
        mappings:
          identifier: .id | gsub(" "; "")
          title: .name
          blueprint: '"board"'
          properties:
            link: .url
          relations:
            project: .__project.id | gsub(" "; "")
  - kind: column
    selector:
      query: 'true'
    port:
      entity:
        mappings:
          identifier: .__stateType+"-"+.name+"-"+.__board.__project.id | gsub(" "; "")
          title: .name
          blueprint: '"column"'
          relations:
            board: .__board.id | gsub(" "; "")
  - kind: release
    selector:
      query: 'true'
    port:
      entity:
        mappings:
          identifier: .id | tostring | gsub(" "; "")
          title: .name
          blueprint: '"release"'
          properties:
            status: .status
            reason: .reason
            createdDate: .createdOn
            modifiedDate: .modifiedOn
            createdBy: .createdBy.displayName
            modifiedBy: .modifiedBy.displayName
            tags: .tags
            link: ._links.web.href | gsub("_release?releaseId="; "")
          relations:
            project: .projectReference.id | gsub(" "; "")
  - kind: environment
    selector:
      query: 'true'
    port:
      entity:
        mappings:
          identifier: .id | tostring
          title: .name | tostring
          blueprint: '"azureDevopsEnvironment"'
          properties:
            description: .description
            createdOn: .createdOn
            lastModifiedOn: .lastModifiedOn
          relations:
            project: .project.id
  - kind: release-deployment
    selector:
      query: 'true'
      includeRelease: true
    port:
      entity:
        mappings:
          identifier: .id | tostring
          title: .release.name + "-" + (.id | tostring) | gsub(" "; "")
          blueprint: '"azureDevopsReleaseDeployment"'
          properties:
            status: .deploymentStatus
            url: .url
            reason: .reason
            startedOn: .startedOn
            completedOn: .completedOn
            requestedBy: .requestedBy.displayName
            operationStatus: .operationStatus
            environment: .releaseEnvironment.name
          relations:
            release: .release.id | tostring
  - kind: pipeline-deployment
    selector:
      query: 'true'
    port:
      entity:
        mappings:
          identifier: .id | tostring
          title: .requestIdentifier | tostring
          blueprint: '"azureDevopsPipelineDeployment"'
          properties:
            planType: .planType
            stageName: .stageName
            jobName: .jobName
            result: .result
            startTime: .startTime
            finishTime: .finishTime
          relations:
            environment: .environment.id | tostring

  - kind: file
    selector:
      query: 'true'
      files:
        path: package.json
        repos:
          - my-node-app
          - my-react-app
    port:
      entity:
        mappings:
          identifier: .file.path | gsub(" "; "")
          title: .file.path
          blueprint: '"file"'
          properties:
            path: .file.path
            size: .file.size
            content: .file.content
            link: .repo.remoteUrl + "?path=" + (.file.path)
          relations:
            repository: >-
              "\(.repo.project.name | ascii_downcase | gsub("[ ();]";
              ""))/\(.repo.name | ascii_downcase | gsub("[ ();]"; ""))"
  - kind: file
    selector:
      query: 'true'
      files:
        path:
          - deployment/helm/values.yaml
          - docs/README.md
    port:
      entity:
        mappings:
          identifier: .file.path | gsub(" "; "")
          title: .file.path
          blueprint: '"file"'
          properties:
            path: .file.path
            size: .file.size
            content: .file.content
            link: .repo.remoteUrl + "?path=" + (.file.path)
          relations:
            repository: >-
              "\(.repo.project.name | ascii_downcase | gsub("[ ();]";
              ""))/\(.repo.name | ascii_downcase | gsub("[ ();]"; ""))"
  - kind: file
    selector:
      query: 'true'
      files:
        path:
          - package.json
          - package-lock.json
    port:
      entity:
        mappings:
          identifier: .file.objectId
          title: .file.path
          blueprint: '"file"'
          properties:
            path: .file.path
            size: .file.size
            content: .file.content
            link: .repo.remoteUrl + "?path=" + (.file.path)
          relations:
            repository: >-
              "\(.repo.project.name | ascii_downcase | gsub("[ ();]";
              ""))/\(.repo.name | ascii_downcase | gsub("[ ();]"; ""))"
  - kind: folder
    selector:
      query: 'true'
      project_name: 'project001'
      folders:
        - path: measure/
          repos:
            - name: test_repo
              branch: main
        - path: fulfyldwms/*
          repos:
            - name: folder_test_repo
              branch: main
    port:
      entity:
        mappings:
          identifier: .objectId
          title: .path
          url: .__repository.url
          blueprint: '"azureDevopsRepository"'
          properties:
            defaultBranch: .__repository.defaultBranch
          relations:
            project: .__repository.project.id | gsub(" "; "")
  - kind: build
    selector:
      query: 'true'
    port:
      entity:
        mappings:
          identifier: (.id | tostring) | gsub(" "; "")
          title: .buildNumber
          blueprint: '"build"'
          properties:
            status: .status
            result: .result
            queueTime: .queueTime
            startTime: .startTime
            finishTime: .finishTime
            definitionName: .definition.name
            requestedFor: .requestedFor.displayName
          relations:
            project: .__project.id | gsub(" "; "")
  - kind: pipeline-stage
    selector:
      query: 'true'
    port:
      entity:
        mappings:
          identifier: >-
            .__project.id + "-" + (.__build.id | tostring) + "-" + (.id |
            tostring) | gsub(" "; "")
          title: .name
          blueprint: '"pipeline-stage"'
          properties:
            state: .state
            result: .result
            startTime: .startTime
            finishTime: .finishTime
            stageType: .type
          relations:
            project: .__project.id | gsub(" "; "")
            build: (.__build.id | tostring) | gsub(" "; "")
  - kind: pipeline-run
    selector:
      query: 'true'
    port:
      entity:
        mappings:
          identifier: >-
            .__project.id + "-" + (.__pipeline.id | tostring) + "-" + (.id |
            tostring) | gsub(" "; "")
          title: .name // .runNumber // (.id | tostring)
          blueprint: '"pipeline-run"'
          properties:
            state: .state
            result: .result
            createdDate: .createdDate
            finishedDate: .finishedDate
            pipelineName: .pipeline.name
          relations:
            project: .__project.id | gsub(" "; "")
  - kind: iteration
    selector:
      query: 'true'
    port:
      entity:
        mappings:
          identifier: .id | gsub(" "; "")
          title: .name
          blueprint: '"iteration"'
          properties:
            name: .name
            path: .path
            iterationKind: .__iterationKind
            timeFrame: .attributes.timeFrame
          relations:
            project: .__project.id | gsub(" "; "")
  - kind: branch
    selector:
      query: 'true'
    port:
      entity:
        mappings:
          identifier: >-
            .__repository.project.name + "/" + .__repository.name + "/" + .name |
            gsub(" "; "") | gsub("/"; "-")
          title: .name
          blueprint: '"branch"'
          properties:
            name: .name
            repositoryName: .__repository.name
            projectName: .__repository.project.name
            repositoryUrl: .__repository.remoteUrl
          relations:
            repository: >-
              "\(.__repository.project.name | ascii_downcase | gsub("[ ();]";
              ""))/\(.__repository.name | ascii_downcase | gsub("[ ();]"; ""))"
