[tool.poetry]
name = "port-ocean"
version = "0.18.8"
description = "Port Ocean is a CLI tool for managing your Port projects."
readme = "README.md"
homepage = "https://app.getport.io"
repository = "https://github.com/port-labs/Port-Ocean"

authors = ["Daniel Sinai <daniel@getport.io>", "Yair Siman-Tov <yair@getport.io>", "Tom Tankilevitch <tom@getport.io>"]
packages = [
    { include = "port_ocean", from = "." }
]

include = [
    { path = "./integrations/_infra/*", format = ["sdist", "wheel"] }
]

keywords = ["ocean", "port-ocean", "port"]
classifiers = [
    "Framework :: FastAPI",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: POSIX",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]

[tool.poetry.scripts]
ocean = "port_ocean.cli.cli:cli_start"

[build-system]
requires = ["poetry-core>=1.0.0,<2.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.12"
pydantic = { version = "^1.10.8", extras = ["dotenv"] }
loguru = "^0.7.0"
pyyaml = "^6.0"
werkzeug = ">=2.3.4,<4.0.0"
fastapi = "^0.115.3"
uvicorn = ">=0.22,<0.31"
confluent-kafka = "^2.1.1"
httpx = ">=0.24.1,<0.28.0"
jq = "^1.8.0"
urllib3 = ">=1.26.16,<3.0.0"
six = "^1.16.0"
pyhumps = "^3.8.0"
pydispatcher = "^2.0.7"
tomli = "^2.0.1"
aiostream = ">=0.5.2,<0.7.0"
python-dateutil = "^2.9.0.post0"

# CLI
click = { version = "^8.1.3", optional = true }
rich = { version = "^13.4.1", optional = true }
cookiecutter = { version = "^2.1.1", optional = true }
jinja2-time = { version = "^0.2.0", optional = true }

[tool.poetry.extras]
cli = ["click", "rich", "cookiecutter", "jinja2-time"]


[tool.poetry.group.dev.dependencies]
black = ">=23.3,<25.0"
mypy = "^1.3.0"
pre-commit = "^3.7.1"
pylint = ">=2.17.4,<4.0.0"
pytest = ">=8.2,<9.0"
pytest-asyncio = ">=0.24.0"
pytest-httpx = ">=0.30.0"
pytest-xdist = "^3.6.1"
ruff = "^0.6.3"
towncrier = "^23.6.0"
types-python-dateutil = "^2.9.0.20240316"
types-pyyaml = "^6.0.12.10"
types-toml = "^0.10.8.6"
yamllint = "^1.32.0"
pytest-timeout = "^2.3.1"
cryptography = "^43.0.1"

[tool.towncrier]
directory = "changelog"
filename = "CHANGELOG.md"
title_format = "## {version} ({project_date})"
package_dir = "."
package = "port_ocean"
underlines = [""]

[[tool.towncrier.type]]
directory = "breaking"
name = "Breaking Changes"
showcontent = true

[[tool.towncrier.type]]
directory = "deprecation"
name = "Deprecations"
showcontent = true

[[tool.towncrier.type]]
directory = "feature"
name = "Features"
showcontent = true

[[tool.towncrier.type]]
directory = "improvement"
name = "Improvements"
showcontent = true

[[tool.towncrier.type]]
directory = "bugfix"
name = "Bug Fixes"
showcontent = true

[[tool.towncrier.type]]
directory = "doc"
name = "Improved Documentation"
showcontent = true

[tool.mypy]
exclude = [
    'port_ocean/cli/cookiecutter',
    'venv',
    '.venv',
    'integrations',
    'docs',
    'node_modules'
]
plugins = [
    "pydantic.mypy"
]

follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true

# for strict mypy: (this is the tricky one :-))
disallow_untyped_defs = true


[tool.ruff]
# Never enforce `E501` (line length violations).
ignore = ["E501"]
exclude = ['venv', '.venv', 'integrations']
target-version = "py311"

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
exclude = '''
/(
  \scripts
  \.toml
  |\.sh
  |\.git
  |\.ini
  |Dockerfile
  |\.venv
  |integrations
  |docs
  |node_modules
)/
'''

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
addopts = "-vv -n auto --durations=10 --color=yes --ignore-glob='./integrations/*' ./port_ocean/tests"
markers = [
    "smoke: Smoke tests (deselect with '-m \"not smoke\"')"
]
